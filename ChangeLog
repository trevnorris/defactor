2012.01.24, Version 0.1.3, bbc1c54
----------------------------------

* defactor() will now accept an object, which will add all triggers/queues
then create the deferred

* .add() can now be passed an array or space seperated string of queues, which
will all be added against the trigger

2012.01.23, Version 0.1.2, add5399
----------------------------------

* Pass boolean to defactor() or generated deferred to set queue clear behavior
	* If create() with defactor( true ) then can pass false to deferred to
	override the parameter for a single instance of the deferred

* Default behavior is to persist queue after trigger

2012.01.23, Version 0.1.1, 2beceba
----------------------------------

* triggers now run non-blocking, but not in guaranteed order

* always() has been removed from API

2011.12.14, Version 0.1.0, 28d892c
----------------------------------

* addWith() has been removed from API

* All triggers can now be passed context and/or an argument array

* Internally: map/data have been re-structured

2011.12.12, Version 0.0.5, 37bbfc6
----------------------------------

* Create queues that will always fire using addAlways()

2011.12.09, Version 0.0.4, 29ad8e4
----------------------------------

* Fix bug where clearQueue was actually clearing the trigger/queue map

2011.12.09, Version 0.0.3, 440af8b
----------------------------------

* Defactor:
	* guid is now referenced by _key
	* only uses map object to store trigger/queue relationships

* Defactor.fn.create returns an uninstantiated deferred which can be used multiple times

* Generated deferreds use the private data object to store function queues

* Queue persistance argument is now passed to generated deferred

2011.12.09, Version 0.0.2, 02d3b01
----------------------------------

* Defactor.fn.add( trigger, queue ): order of arguments has been swapped

2011.12.09, Version 0.0.1, f95ea0c
---------------------------

* Defactor( [persist] ):
	* Accepts boolean argument to determine whether queue is cleared or
	retained (default is false)
	* Creates guid for use in the private map and data objects

* Defactor.fn:
	* add( queue, trigger ): add a new queue/trigger pair to the map
	* create(): generate a new initialized deferred object
